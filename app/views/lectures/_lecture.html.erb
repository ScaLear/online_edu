<script src="http://popcornjs.org/code/dist/popcorn-complete.js"></script>

<style>
	.ontop{
		/*background:#fff;  /* invisible div*/
        position:absolute;
        min-width:600px;
        min-height:365px;
        z-index:99;
	}
</style>

<p>
  <b>Name:</b>
  <%= lecture.name %>
</p>

<p>
  <b>Description:</b>
  <%= lecture.description %>
</p>

<center><div style="width:600px" >
<div id="foo"></div><br>
<div class="ontop" id="ontop"></div>
<div id="youtube" style="width:600px;height:400px;"></div>
</div></center>

<script>
var pop;

function formatSecondsAsTime(secs, format) {
  var hr  = Math.floor(secs / 3600);
  var min = Math.floor((secs - (hr * 3600))/60);
  var sec = Math.floor(secs - (hr * 3600) -  (min * 60));

  if (hr < 10)   { hr    = "0" + hr; }
  if (min < 10) { min = "0" + min; }
  if (sec < 10)  { sec  = "0" + sec; }
  if (hr)            { hr   = "00"; }

  if (format != null) {
    var formatted_time = format.replace('hh', hr);
    formatted_time = formatted_time.replace('h', hr*1+""); // check for single hour formatting
    formatted_time = formatted_time.replace('mm', min);
    formatted_time = formatted_time.replace('m', min*1+""); // check for single minute formatting
    formatted_time = formatted_time.replace('ss', sec);
    formatted_time = formatted_time.replace('s', sec*1+""); // check for single second formatting
    return formatted_time;
  } else {
    return hr + ':' + min + ':' + sec;
  }
}


function skip_to(time)
{
	if (pop.currentTime()-0.5 < 0)
	{
		pop.currentTime(time-0.1);
	}
	else
	{
		pop.currentTime(time-0.5);
	}
	
	//pop.play();	
}

document.addEventListener( "DOMContentLoaded", function() {

var last=0;
var flag=0;
pop = Popcorn.youtube( "#youtube", "<%=  lecture.url %>",{ width: 400, controls: 0}); //youtube unlike normal html5 needs to be run from a webserver

pop.controls( false );                          
pop.play();

// I want to add the skip buttons
skip="Skip to "



data= <%= raw lecture.online_quizzes.to_json %>;   // important how to convert rails array of objects to JS array of objects
   
   for(element in data) {
      
      skip+="<button onclick='skip_to("+data[element].time+")'>Q"+element+" - "+formatSecondsAsTime(data[element].time)+"</button>"
      
           }

document.getElementById("foo").innerHTML=skip


// pop.listen("play", function(){
	// console.debug("in play")
	// if (flag==1)
	// {
		// flag=0;
// 		
	// }
// });



pop.listen( "timeupdate", function() {
    //console.log( this.currentTime() );
    a= <%= raw lecture.online_quizzes.to_json %>;   // important how to convert rails array of objects to JS array of objects
    //console.debug(a)
    //console.debug(a[0])
           for(key in a) {
          //console.debug("online quiz time isss "+a[key].time)
          //console.debug("flag isss "+flag)
           if(this.currentTime()> parseFloat(a[key].time) && this.currentTime()< parseFloat(a[key].time)+0.5 &&  flag==0 )
           {
           //console.debug("more than 4 seconds");
          // document.getElementById("foo").innerHTML = "<b style='background-color: white;'>HELLO!!!</b>";
          //  console.debug("pop duration isss"+pop.duration()) 
           pop.pause();
           flag=1;
           last=parseFloat(a[key].time)
           
           // now i want to get the answers
            $.getJSON("<%= @url %>",{"quiz":a[key].id }, function(resp){
    			//console.debug(resp)
    			html=""
    			for(answer in resp) {
           			top3= parseFloat(resp[answer].ycoor)-5;
           			left= parseFloat(resp[answer].xcoor)-8;
           			
           			reason= resp[answer].answer
           			if(resp[answer].correct==true)
           			{
           				title="<b style='color:green'>Correct</b>"
           			}else{
           				title="<b style='color:red'>Incorrect</b>"
           			}
           			
           			console.debug( "x: "+top3+" y:"+left+" reason: "+resp[answer].answer)
           			
           			html+="<button rel='popover' id='"+resp[answer].id+"' data-original-title=\""+title+"\" class='pop' data-content=\""+reason+"\"  style='position:absolute; width: 3px; height: 5px; border: 1px solid #006; background: #9cf; top:"+top3+"px; left: "+left+"px;'></button>"
           			//onclick='show_reason(\""+reason+"\")'
           			//$('.pop').popover()
           			document.getElementById("ontop").innerHTML=html;
           			
           			$("[rel=popover]").popover(); //{trigger: 'manual'}
           			
           			
           			//console.debug( "x: "+top3+" y:"+left)
           			//html+="<button style='position:absolute; width: 3px; height: 5px; border: 1px solid #006; background: #9cf; top:"+top3+"px; left: "+left+"px;'></button>"
           			//document.getElementById("ontop").innerHTML=html;
           			// absolute therefore xpos relative to parent div. i.e. xpos min awel el video.
    		}
    		});
           
           // need timer here so don't pause twice!!
           
           }
           else
           {
           //	console.debug("last issss "+last)
           	if(this.currentTime() > last + 1.0 || (this.currentTime() < last) )   // 1 second from both directions so don't stop after playing.
           	{
           		flag=0;
           	} 
           	
           	
           if (!this.paused()){
           //document.getElementById("foo").innerHTML=""   
           document.getElementById("ontop").innerHTML=""
           }
           }

           
           }
       });


});
</script>